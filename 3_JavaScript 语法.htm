<!DOCTYPE html>
<html lang="zh-cmn-Hans">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Document</title>
    <script src="myScript.js"></script>
    <style>
      h1 {
        font-size: 30px;
      }
      h2 {
        font-size: 24px;
        text-indent: 2em;
      }
      h3 {
        font-size: 16px;
        text-indent: 4em;
      }
      h4 {
        font-size: 16px;
        color: red;
        text-indent: 4em;
      }
      .example_code {
    line-height: 1.4em;
    width: 98%;
    background-color: #fff;
    padding: 5px;
    border: 1px solid #d4d4d4;
    font-size: 110%;
    font-family: Menlo,Monaco,Consolas,"Andale Mono","lucida console","Courier New",monospace;
    word-break: break-all;
    word-wrap: break-word;
}
    </style>
  </head>

  <body>
    <h1>语法</h1>
    <h2>字面量</h2>
    <h3>数字（Number）字面量</h3>
    <p>3.14 <p>1001 <p>123e5
    <h3>字符串（String）字面量</h3>
    <p></p>"John Doe" <p></p>'John Doe'
    <h3>表达式字面量</h3>
    5 + 6 5 * 10
    <h3>数组（Array）字面量</h3>
    [40, 100, 1, 5, 25, 10]
    <h3>对象（Object）字面量</h3>
    {firstName:"John", lastName:"Doe", age:50, eyeColor:"blue"}
    <h3>函数（Function）字面量</h3>
    function myFunction(a, b) { return a * b;}

    <h2>变量</h2>
    var 来定义变量， 使用等号来为变量赋值 var x, length x = 5 length = 6
    <h4>变量是一个名称。字面量是一个值。</h4>

    <h2>操作符</h2>
    <h3>算术运算符</h3>
    <p id="demo1"></p>
    <script>
      document.getElementById("demo1").innerHTML = (5 + 6) * 10;
    </script>
    <h3>赋值运算符</h3>

    x = 5 y = 6 z = (x + y) * 10

    <h3>赋值，算术和位运算符</h3>
    = + - * /
    <h3>条件，比较及逻辑运算符</h3>
    == != < >

    <h2>语句</h2>
    语句是用分号分隔 x = 5 + 6; y = x * 10;

    <h2>关键字</h2>
    <div class="example_code">
        var 关键字告诉浏览器创建一个新的变量： var x = 5 + 6; var y = x * 10; 保留:
        abstract else instanceof super boolean enum int switch break export
        interface synchronized byte extends let this case false long throw catch
        final native throws char finally new transient class float null true const
        for package try continue function private typeof debugger goto protected var
        default if public void delete implements return volatile do import short
        while double in static with
    </div>
    

    <h2>注释</h2>
    // 我不会执行

    <h2>数据类型</h2>
    数字，字符串，数组，对象 
    <p></p>var length = 16; // Number 通过数字字面量赋值 
    <p></p>var points = x * 10; // Number 通过表达式字面量赋值 
    <p></p>var lastName = "Johnson"; //String 通过字符串字面量赋值 
    <p></p>var cars = ["Saab", "Volvo", "BMW"]; // Array通过数组字面量赋值 
    <p></p>var person = {firstName:"John", lastName:"Doe"}; //Object 通过对象字面量赋值


    
    <h2>函数</h2>
    <button type="button" onclick="myFunction001()">尝试一下</button>
  </body>
</html>
